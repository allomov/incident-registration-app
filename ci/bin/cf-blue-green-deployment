#!/usr/bin/env bash

# blue_app_name-green_app_name deployment script. Usage:
#
#   ./cf-blue-green-deployment <app-manifest>

set -e
set -o pipefail
# set -x


if  [ -z "$cf_api" ] || [ -z "$cf_username" ] || [ -z "$cf_password" ] || \
    [ -z "$cf_org" ] || [ -z "$cf_space" ] || [ -z "$app_name" ] || [ -z "$app_folder" ]; then
  echo "You need to define following environment variables: "
  echo
  echo "    cf_api, cf_username, cf_password, cf_org, cf_space, app_name, app_folder"
  echo
  exit 1
fi

cf api --skip-ssl-validation $cf_api
cf login -u $cf_username -p $cf_password -o $cf_org -s $cf_space

# if [ $# -ne 1 ]; then
#   echo "Usage:\n\n\t./cf-blue-green-deployment\n"
#   exit 1
# fi

version=$(cat version/version)
escaped_versoin=$(echo ${version} | sed 's/\./-/g')

blue_app_name=$app_name
green_app_name="$blue_app_name-$escaped_versoin"

# create the green_app_name application
cf push $green_app_name -n $green_app_name -p $app_folder
# ensure it starts
# curl --fail --insecure -I "https://${green_app_name}.${DOMAIN}"

# add the green_app_name application to each blue_app_name route to be load-balanced
# TODO this output parsing seems a bit fragile...find a way to use more structured output
# cf routes | tail -n +4 | grep $blue_app_name | awk '{print $3" -n "$2}' | xargs -n 3 cf map-route $green_app_name

# cf map-route $green_app_name $DOMAIN -n $blue_app_name

# cleanup
# TODO consider 'stop'-ing the blue_app_name instead of deleting it, so that depedencies are cached for next time
# cf delete $blue_app_name -f
# cf rename $green_app_name $blue_app_name

echo "DONE"
